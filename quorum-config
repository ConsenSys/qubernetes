#!/usr/bin/env ruby

require "yaml"
require "erb"

# generic variables
@CONFIG_FILE = "qubernetes.yaml"
@OPTIONAL_CONFIG_FILE=ARGV[0]
ARGV.clear

if @OPTIONAL_CONFIG_FILE != nil
  @CONFIG_FILE = @OPTIONAL_CONFIG_FILE
end
puts "using config file: " + @CONFIG_FILE

@config     = YAML.load_file(@CONFIG_FILE)
@nodes      = YAML.load_file("nodes.yaml")["nodes"]

## set defaults for config if not set, else use the values from the config.

# directory where the genesis.json will be stored after it is generated.
@Genesis_File = "out/config/genesis.json"
if @config["quorum"]["Genesis_File"]
  @Genesis_File = @config["quorum"]["Genesis_File"]
end

# used by genesis.json.erb, gen-keys.sh.erb, and .
@Key_Dir_Base = "out/config"
if @config["quorum"]["Key_Dir_Base"]
  @Key_Dir_Base  = @config["quorum"]["Key_Dir_Base"]
end

# used in tessera-config-*.json.erb(s)
@Node_DataDir = "/etc/quorum/qdata"
if @config["quorum"]["Node_DataDir"]
  @Node_DataDir = @config["quorum"]["Node_DataDir"]
end

# directory where the permissioned-node.json will be stored after it is generated.
@Permissioned_Nodes_File = "out/config/permissioned-nodes.json"
if @config["quorum"]["Permissioned_Nodes_File"]
  @Permissioned_Nodes_File = @config["quorum"]["Permissioned_Nodes_File"]
end

# directory where the tessera-config.json files. will be stored after it is generated.
@Tessera_Config_Dir = "out/config"
if @config["quorum"]["tm"]["Tessera_Config_Dir"]
  @Tessera_Config_Dir = @config["quorum"]["tm"]["Tessera_Config_Dir"]
end

## set ports needed for the quorum templates
# Tm_Port used in tessera config templates
@Tm_Port = 9001
if @config["quorum"]["tm"]["Port"]
  @Tm_Port = @config["quorum"]["tm"]["Port"]
end
# used by permissioned-nodes.json.erb to set enode URLs
@Raft_Port = 50401
if @config["quorum"]["quorum"]["Raft_Port"]
  @Raft_Port = @config["quorum"]["quorum"]["Raft_Port"]
end
@NodeP2P_ListenAddr = 30303
if @config["geth"] and @config["geth"]["NodeP2P_ListenAddr"]
  @NodeP2P_ListenAdd = @config["geth"]["NodeP2P_ListenAddr"]
end

#####################################################
# Generate genesis.json and permissioned-nodes.json
#####################################################
@base_template_path = "templates/quorum"
`mkdir -p out/config`

# create genesis files with all discovered keystore accounts pre alloc with funds.
puts(@Genesis_File)
File.open(@Genesis_File, "w") do |f|
  f.puts (ERB.new(File.read(@base_template_path + "/genesis.json.erb"), nil, "-").result(binding))
end

# create permission nodes file containing all the nodes.
puts(@Permissioned_Nodes_File)
File.open(@Permissioned_Nodes_File , "w") do |f|
  f.puts (ERB.new(File.read(@base_template_path + "/permissioned-nodes.json.erb"), nil, "-").result)
end

# create tessera config.
puts(@Tessera_Config_Dir + "/tessera-config.json")
File.open(@Tessera_Config_Dir + "/tessera-config.json" , "w") do |f|
  f.puts (ERB.new(File.read(@base_template_path + "/tessera-config.json.erb"), nil, "-").result)
end
puts(@Tessera_Config_Dir + "/tessera-config-enhanced.json")
File.open(@Tessera_Config_Dir + "/tessera-config-enhanced.json" , "w") do |f|
  f.puts (ERB.new(File.read(@base_template_path + "/tessera-config-enhanced.json.erb"), nil, "-").result)
end
# Add support for tessera 9.0+ configs
puts(@Tessera_Config_Dir + "/tessera-config-9.0.json")
File.open(@Tessera_Config_Dir + "/tessera-config-9.0.json" , "w") do |f|
  f.puts (ERB.new(File.read(@base_template_path + "/tessera-config-9.0.json.erb"), nil, "-").result)
end
